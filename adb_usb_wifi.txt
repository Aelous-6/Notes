
在默认情况下adb是通过usb连接的。但是adb同时也支持通过wifi连接。前提是使用adb命令的电脑终端与待调试的手机在同一个网段下.

1,连接USB线转为WIFI(前提adb通过usb连接)
 dos 命令行下:
	adb tcpip 5555 //设置手机的tcpip端口号
	adb connect device_ip(设备IP地址) //连接设备
	adb disconnect //断开wifi

2, WIFI转为USB
	adb usb //此时USB数据线可以正常使用
	
3,adb无法连接到WIFI时
	//需要取得超级管理员权限执行su，再执行
	setprop service.adb.tcp.port 5555
	stop adbd
	start adbd
	
	//连接WIFI
	cmd: adb connect device_ip(设备IP地址)

4, adb无法连接到USB
	//需要取得超级管理员权限执行su，再执行
	setprop service.adb.tcp.port -1
	stop adbd
	start adbd
	
脚本切换:
	
	#!/bin/bash
   
	#Modify this with your IP range
	MY_IP_RANGE="192\.168\.43"

	#You usually wouldn't have to modify this
	PORT_BASE=5555

	#List the devices on the screen for your viewing pleasure
	adb devices
	echo

	#Find USB devices only (no emulators, genymotion or connected devices
	declare -a deviceArray=(`adb devices -l | grep -v emulator | grep -v vbox | grep -v "${MY_IP_RANGE}" | grep " device " | awk '{print $1}'`)  

	echo "found ${#deviceArray[@]} device(s)"
	echo

	for index in ${!deviceArray[*]}
	do
	echo "finding IP address for device ${deviceArray[index]}"
	IP_ADDRESS=$(adb -s ${deviceArray[index]} shell ifconfig wlan0 | awk '{print $3}')

	echo "IP address found : $IP_ADDRESS "

	echo "Connecting..."
	adb -s ${deviceArray[index]} tcpip $(($PORT_BASE + $index))
	adb -s ${deviceArray[index]} connect "$IP_ADDRESS:$(($PORT_BASE + $index))"

	echo
	echo
	done

	adb devices -l
	#exit

//以上脚本文件，mac或者Linux直接可以运行，windows上需要安装一些如msysgit或者Cygwin才可运行以上Linux shell
//前提需要usb连接adb，待执行玩命令后，可以拔掉usb数据线，此时手机切换至wifi连接，待连接上wifi后，如切回至usb，使用adb usb或者重启设备即可
sh adbTowifi.sh
	
	